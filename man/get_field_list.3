.\" get_field_list.3.  The get_field_list man page.
.\"
.\" (C) 2008 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" GetData is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with GetData; if not, write to the Free Software
.\" Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
.\" 02111-1307 USA.
.\"
.TH get_field_list 3 "26 August 2008" "Version 0.3.0" "GETDATA"
.SH NAME
get_field_list \(em retrieve a list of fields in a dirfile
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "const char** get_field_list(DIRFILE *" dirfile );
.hy
.ad n
.SH DESCRIPTION
The
.BR get_field_list ()
function queries a dirfile(5) database specified by
.I dirfile
and returns a read-only list of names of the fields defined in the database.
Notably, this list does not include the implicit
.I INDEX
field.

The 
.I dirfile
parameter must point to a valid DIRFILE object previously created by a call to
.BR dirfile_open (3).

.SH RETURN VALUE
Upon successful completion,
.BR get_field_list ()
returns a pointer to an array of strings containing the names of all the fields
defined in the dirfile database.  On error, it
returns zero and sets
.IR dirfile -> error
to a non-zero error value.  Possible error values are:
.TP 8
.B GD_E_BAD_DIRFILE
The supplied dirfile was invalid.
.P
A descriptive error string for the last error encountered can be obtained from
a call to
.BR get_error_string (3).

The array returned will be de-allocated by a call to
.BR dirfile_close (3)
and should not be de-allocated by the caller.  The list returned should not be
assumed to be in any particular order.  The length of the array can be obtained
from a call to
.BR get_nfields (3).
.SH SEE ALSO
.BR dirfile (5),
.BR dirfile_open (3),
.BR getdata (3),
.BR get_error_string (3),
.BR get_nfields (3)
