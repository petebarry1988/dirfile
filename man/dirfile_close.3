.\" dirfile_close.3.  The dirfile_close man page.
.\"
.\" (C) 2008 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" GetData is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License along
.\" with GetData; if not, write to the Free Software Foundation, Inc.,
.\" 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
.\"
.TH dirfile_close 3 "30 August 2008" "Version 0.3.0" "GETDATA"
.SH NAME
dirfile_close \(em close a dirfile and free associated memory.
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "int dirfile_close(DIRFILE *" dirfile );
.hy
.ad n
.SH DESCRIPTION
The
.BR dirfile_close ()
function first calls
.BR dirfile_flush (3)
to flush and close all file handles associated with 
.IR dirfile .
It then frees memory associated with the DIRFILE object.  If
.I dirfile
is NULL, nothing happens, and the call succeeds.

The
.BR dirfile_close ()
function should be called on all pointers returned by
.BR dirfile_open (3),
even if the call to that function failed.  After
.BR dirfile_close ()
returns, the pointer
.I dirfile
should be considered invalid.
.SH RETURN VALUE
.BR dirfile_close ()
returns zero on success.  On error, it does not free
.I dirfile
and sets
.IR dirfile -> error
to a non-zero error value.  Possible error values are:
.TP 8
.B GD_E_RAW_IO
An error occurred while trying to flush or close one or more open raw files.
In this case,
.I dirfile
will not be deallocated, and another call to
.BR dirfile_close ()
may be attempted.
.P
A descriptive error string for the last error encountered can be obtained from
a call to
.BR get_error_string (3).
.SH SEE ALSO
.BR dirfile_open (3),
.BR dirfile_flush (3),
.BR get_error_string (3)
