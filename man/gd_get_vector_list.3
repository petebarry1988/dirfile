.\" gd_get_vector_list.3.  The gd_get_vector_list man page.
.\"
.\" (C) 2008, 2010 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.2 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
.\" Texts.  A copy of the license is included in the `COPYING.DOC' file
.\" as part of this distribution.
.\"
.TH gd_get_vector_list 3 "25 May 2010" "Version 0.7.0" "GETDATA"
.SH NAME
gd_get_vector_list \(em retrieve a list of vector fields in a dirfile
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "const char **gd_get_vector_list(DIRFILE *" dirfile );
.hy
.ad n
.SH DESCRIPTION
The
.BR gd_get_vector_list ()
function queries a dirfile(5) database specified by
.I dirfile
and returns a read-only list of names of the all vector type fields defined in
the database
.RI ( i.e.
fields of types
.BR BIT ,\~ LINCOM ,\~ LINTERP ,\~ MULTIPLY ,\~ PHASE ,\~ POLYNOM ,\~ RAW ,
.BR SBIT ).
Notably, this list does not include /META subfields.

The 
.I dirfile
argument must point to a valid DIRFILE object previously created by a call to
.BR gd_open (3).

The array returned will be de-allocated by a call to
.BR gd_close (3)
and should not be de-allocated by the caller.  The list returned should not be
assumed to be in any particular order.  The array is terminated by a NULL
pointer.  The number of strings in the array can be obtained from a call to
.BR gd_get_nvectors (3).

The caller may not modify any strings in the array, or the array itself.  Doing
so may cause database corruption.  The pointer returned is guaranteed to be
valid until
.BR gd_get_vector_list ()
is called again on the same DIRFILE object, or until the array is deallocated by
a call to
.BR gd_close (3).

.SH RETURN VALUE
Upon successful completion,
.BR gd_get_vector_list ()
returns a pointer to an array of strings containing the names of all the vector
fields defined in the dirfile database.  On error it returns NULL and sets the
dirfile error to a non-zero error value.  Possible error values are:
.TP 8
.B GD_E_ALLOC
The library was unable to allocate memory.
.TP
.B GD_E_BAD_DIRFILE
The supplied dirfile was invalid.
.P
The dirfile error may be retrieved by calling
.BR gd_error (3).
A descriptive error string for the last error encountered can be obtained from
a call to
.BR gd_error_string (3).
.SH SEE ALSO
.BR dirfile (5),
.BR gd_open (3),
.BR gd_error (3),
.BR gd_error_string (3),
.BR gd_get_field_list (3),
.BR gd_get_mvector_list (3),
.BR gd_get_nvectors (3)
