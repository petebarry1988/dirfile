.\" get_mconstants.3.  The get_mconstants man page.
.\"
.\" (C) 2008 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" GetData is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License along
.\" with GetData; if not, write to the Free Software Foundation, Inc.,
.\" 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
.\"
.TH get_mconstants 3 "17 October 2008" "Version 0.4.0" "GETDATA"
.SH NAME
get_mconstants \(em retrieve a list of constant values from a dirfile
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "const void *get_mconstants(DIRFILE *" dirfile ", gd_type_t
.IB return_type ", const char *" parent );
.hy
.ad n
.SH DESCRIPTION
The
.BR get_mconstants ()
function queries a dirfile(5) database specified by
.I dirfile
and returns a read-only list of values of the all
.B CONST
metatype fields for the supplied
.I parent
field after type conversion to the data type specified by
.IR return_type .

The 
.I dirfile
parameter must point to a valid DIRFILE object previously created by a call to
.BR dirfile_open (3).

The array returned will be de-allocated by a call to
.BR dirfile_close (3)
and should not be de-allocated by the caller.  The list returned should not be
assumed to be in any particular order, although it is guaranteed to be in the
same order as the list of
.B CONST
fields returned by
.BR get_mfield_list_by_type (3).
The array is unterminated.  The number of values in the array can be obtained
from a call to
.BR get_nmfields_by_type (3).

The caller may not modify any values in the array, or the array itself.  Doing
so may cause database corruption.  The pointer returned is guaranteed to be
valid until
.BR get_mconstants ()
is called again with the same arguments, or until the array is deallocated by
a call to
.BR dirfile_close (3).

A corresponding list of names for these fields may be obtained by calling
.BR get_mfield_list_by_type (3).

.SH RETURN VALUE
Upon successful completion,
.BR get_mconstants ()
returns a pointer to an array of values containing the values of all the
.B CONST
metafields for the supplied parent field.  If the parent field has no constant
metafields, NULL is returned.  On error it returns NULL and sets the dirfile
error to a non-zero error value.  Possible error values are:
.TP 8
.B GD_E_ALLOC
The library was unable to allocate memory.
.TP
.B GD_E_BAD_CODE
The supplied parent field code was not found, or referred to a metafield itself.
.TP
.B GD_E_BAD_DIRFILE
The supplied dirfile was invalid.
.TP
.B GD_E_BAD_TYPE
The
.I return_type
specified was invalid.
.P
The dirfile error may be retrieved by calling
.BR get_error (3).
A descriptive error string for the last error encountered can be obtained from
a call to
.BR get_error_string (3).
.SH SEE ALSO
.BR dirfile (5),
.BR dirfile_open (3),
.BR get_error (3),
.BR get_error_string (3),
.BR get_field_list_by_type (3),
.BR get_nfields_by_type (3)
