.\" gd_close.3.  The gd_close man page.
.\"
.\" (C) 2008, 2009, 2010 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.2 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
.\" Texts.  A copy of the license is included in the `COPYING.DOC' file
.\" as part of this distribution.
.\"
.TH gd_close 3 "25 May 2010" "Version 0.7.0" "GETDATA"
.SH NAME
gd_close, gd_discard \(em close a dirfile and free associated memory.
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "int gd_close(DIRFILE *" dirfile );
.HP
.BI "int gd_discard(DIRFILE *" dirfile );
.hy
.ad n
.SH DESCRIPTION
The
.BR gd_close ()
function first calls
.BR gd_flush (3)
to flush all metadata changes to disk and to close all file handles associated
with 
.IR dirfile .
It then frees memory associated with the DIRFILE object.  If
.I dirfile
is NULL, nothing happens, and the call succeeds.

The
.BR gd_discard ()
function behaves similarly, except modified metadata is not written to disk,
but simply discarded.  In order to ensure that modified data files associated
with
.B RAW
fields are properly terminated, changes to
.B RAW
data files are still flushed to disk by this function.  If
.I dirfile
was opened in read-only mode,
.BR gd_discard()
and
.BR gd_close()
behave identically.

One of these functions should be called on all pointers returned by
.BR gd_cbopen (3)
and
.BR gd_open (3),
even if the call to those function failed.  After
.BR gd_close ()
or
.BR gd_discard()
returns successfully, the pointer
.I dirfile
should be considered invalid.
.SH RETURN VALUE
.BR gd_close ()
and
.BR gd_discard ()
return zero on success.  On error, they do not deallocate
.I dirfile
and set the dirfile error to a non-zero error value.  Possible error values
are:
.TP 8
.B GD_E_RAW_IO
An error occurred while trying to flush or close one or more open raw files.
In this case, another call to
.BR gd_close ()
or
.BR gd_discard ()
may be attempted.
.P
The dirfile error may be retrieved by calling
.BR gd_error (3).
A descriptive error string for the last error encountered can be obtained from
a call to
.BR gd_error_string (3).
.SH SEE ALSO
.BR gd_cbopen (3),
.BR gd_error (3),
.BR gd_error_string (3),
.BR gd_flush (3),
.BR gd_open (3)
