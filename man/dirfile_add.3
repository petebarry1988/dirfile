.\" dirfile_add.3.  The dirfile_add man page.
.\"
.\" (C) 2008 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" GetData is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License along
.\" with GetData; if not, write to the Free Software Foundation, Inc.,
.\" 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
.\"
.TH dirfile_add 3 "7 December 2008" "Version 0.5.0" "GETDATA"
.SH NAME
dirfile_add, dirfile_madd \(em add a field to a dirfile
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "int dirfile_add(DIRFILE *" dirfile ", const gd_entry_t *" entry );
.HP
.BI "int dirfile_madd(DIRFILE *" dirfile ", const gd_entry_t *" entry ,
.BI "const char *" parent );
.hy
.ad n
.SH DESCRIPTION
The
.BR dirfile_add ()
function adds the field described by 
.I entry
to the dirfile specified by
.IR dirfile .
The
.BR dirfile_madd ()
function behaves similarly, but adds the field as a metafield under the
field indicated by the field code
.IR parent .

The form of
.I entry
is described in detail in the
.BR get_entry (3)
man page.  All relevant members of
.I entry
for the field type specified must be properly initialised.

When adding a metafield, the
.IR entry -> field
member should contain just the metafield's name, not the fully formed
.IB <parent-field> / <meta-field>
field code.  Also,
.BR dirfile_madd ()
ignores the value of
.IR entry -> fragment_index ,
and instead adds the new meta field to the same format file fragment in which
the parent field is defined.

All fields added with this interface must contain numerical parameters.  Fields
with
.B CONST
fields as parameters cannot be added with these functions.  Those fields must
be added with
.BR dirfile_add_spec (3)
or
.BR dirfile_madd_spec (3).

.SH RETURN VALUE
On success,
.BR dirfile_add ()
and
.BR dirfile_madd ()
return zero.   On error, -1 is returned and the dirfile error is set to a
non-zero error value.  Possible error values are:
.TP 8
.B GD_E_ACCMODE
The specified dirfile was opened read-only.
.TP
.B GD_E_ALLOC
The library was unable to allocate memory.
.TP
.B GD_E_BAD_CODE
The field name provided in
.IR entry -> field
contained invalid characters. Alternately, the
.I parent
field code was not found, or was already a metafield.
.TP
.B GD_E_BAD_DIRFILE
The supplied dirfile was invalid.
.TP
.B GD_E_BAD_ENTRY
There was an error in the specification of the field described by
.IR entry ,
or the caller attempted to add a field of type
.B RAW
as a metafield.
.TP
.B GD_E_BAD_INDEX
The
.IR entry -> fragment_index
parameter was out of range.
.TP
.B GD_E_BAD_TYPE
The
.IR entry -> data_type
parameter provided with a
.BR RAW
entry, or the
.IR entry -> const_type
parameter provided with a
.BR CONST
entry, was invalid.
.TP
.B GD_E_DUPLICATE
The field name provided in 
.IR entry -> field
duplicated that of an already existing field.
.TP
.B GD_E_PROTECTED
The metadata of the fragment was protected from change.  Or, the creation of a
.B RAW
field was attempted and the data of the fragment was protected.
.TP
.B GD_E_RAW_IO
An I/O error occurred while creating an empty binary file to be associated with
a newly added
.B RAW
field.
.TP
.B GD_E_UNKNOWN_ENCODING
The encoding scheme of the specified format file fragment is not known to the
library.  As a result, the library was unable to create an empty binary file to
be associated with a newly added
.B RAW
field.
.TP
.B GD_E_UNSUPPORTED
The encoding scheme of the specified format file fragment does not support
creating an empty binary file to be associated with a newly added
.B RAW
field.
.P
The dirfile error may be retrieved by calling
.BR get_error (3).
A descriptive error string for the last error encountered can be obtained from
a call to
.BR get_error_string (3).
.SH SEE ALSO
.BR dirfile_add_bit (3),
.BR dirfile_add_const (3),
.BR dirfile_add_lincom (3),
.BR dirfile_add_linterp (3),
.BR dirfile_add_multiply (3),
.BR dirfile_add_phase (3),
.BR dirfile_add_raw (3),
.BR dirfile_add_spec (3),
.BR dirfile_add_string (3),
.BR dirfile_madd_bit (3),
.BR dirfile_madd_const (3),
.BR dirfile_madd_lincom (3),
.BR dirfile_madd_linterp (3),
.BR dirfile_madd_multiply (3),
.BR dirfile_madd_phase (3),
.BR dirfile_madd_spec (3),
.BR dirfile_madd_string (3),
.BR dirfile_metaflush (3),
.BR dirfile_open (3),
.BR get_error (3),
.BR get_error_string (3),
.BR dirfile-format (5)
