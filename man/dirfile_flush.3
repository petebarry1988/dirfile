.\" dirfile_flush.3.  The dirfile_flush man page.
.\"
.\" (C) 2008 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" GetData is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with GetData; if not, write to the Free Software
.\" Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
.\" 02111-1307 USA.
.\"
.TH dirfile_flush 3 "30 August 2008" "Version 0.3.0" "GETDATA"
.SH NAME
dirfile_flush \(em close a dirfile and free associated memory.
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "void dirfile_flush(DIRFILE *" dirfile ", const char *" field_code );
.hy
.ad n
.SH DESCRIPTION
The
.BR dirfile_flush ()
function flushes and closes all file handles associated with
.IR field_code ,
or its input(s), in the dirfile specified by
.IR dirfile .
As a special case, if
.I field_code
is NULL, all fields in
.I dirfile
will be flushed and closed.
.SH RETURN VALUE
.BR dirfile_flush ()
returns no value.  On error, it will set
.IR dirfile -> error
to a non-zero error value.  Possible error values are:
.TP 8
.B GD_E_BAD_CODE
The field specified by
.I field_code
was not found in the database.
.TP
.B GD_E_BAD_DIRFILE
The supplied dirfile was invalid.
.TP
.B GD_E_RAW_IO
An error occurred while trying to flush or close the field(s).
.TP
.B GD_E_RECURSE_LEVEL
Too many levels of recursion were encountered while trying to resolve
.IR field_code .
This usually indicates a circular dependency in field specification in the
dirfile.
.P
A descriptive error string for the last error encountered can be obtained from
a call to
.BR get_error_string (3).
.SH SEE ALSO
.BR dirfile_open (3),
.BR dirfile_close (3),
.BR get_error_string (3)
