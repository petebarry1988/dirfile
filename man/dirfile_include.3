.\" dirfile_include.3.  The dirfile_include man page.
.\"
.\" (C) 2008 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" GetData is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License along
.\" with GetData; if not, write to the Free Software Foundation, Inc.,
.\" 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
.\"
.TH dirfile_include 3 "17 October 2008" "Version 0.4.0" "GETDATA"
.SH NAME
dirfile_include \(em add a format file fragment to a dirfile
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "DIRFILE* dirfile_include(DIRFILE *" dirfile ", const char *" include_file ,
.BI "int " fragment_index ", unsigned int " flags );
.hy
.ad n
.SH DESCRIPTION
The
.BR dirfile_include ()
adds the format file fragment specified by the path
.I include_file
to the specified dirfile.  This occurs as if, in the existing fragment indexed
by
.IR fragment_index ,
the following directive were present:
.IP
.BI "/INCLUDE " <include_file>
.P
(see
.BR dirfile-format (5)).
The 
.I flags
parameter should be a bitwise-or'd collection of the following flags, or zero
if no flags are desired:
.TP
.B GD_BIG_ENDIAN
Specifies that raw data on disk is stored as big-endian data (most significant
byte first).  Specifying this flag along with the contradictory
.BR GD_LITTLE_ENDIAN 
will cause the library to assume that the endianness of the data is opposite to
that of the native architecture.

This flag is ignored completely if an
.B ENDIAN
directive occurs in the fragment, unless
.B GD_FORCE_ENDIAN
is also specified.
.TP
.B GD_CREAT
An empty fragment will be created, if one does not already exist.  The fragment
will have mode
.BR S_IRUSR " | " S_IWUSR " | "  S_IRGRP " | "  S_IWGRP " | " S_IROTH " | " S_IWOTH
(0666), modified by the caller's umask value (see
.BR umask (2)).
.TP
.B GD_EXCL
Ensure that this call creates a dirfile: when specified along with
.BR GD_CREAT ,
the call will fail if the dirfile specified by
.I dirfilename
already exists.  Behaviour of this flag is undefined if
.B GD_CREAT
is not specified.  This flag suffers from all the limitations of the
.B O_EXCL
flag as indicated in
.BR open (2).
.TP
.B GD_FORCE_ENCODING
Specifies that
.B ENCODING
directives (see
.BR dirfile-format (5))
found in the fragment should be ignored.  The encoding scheme
specified in
.I flags
will be used instead (see below).
.TP
.B GD_FORCE_ENDIAN
Specifies that
.B ENDIAN
directives (see
.BR dirfile-format (5))
found in the fragment should be ignored.  When specified with one of
.BR GD_BIG_ENDIAN " or " GD_LITTLE_ENDIAN ,
the endianness specified will be assumed.  If this flag is specified with
neither of those flags, the dirfile will be assumed to have the endianness of the
native architecture.
.TP
.B GD_LITTLE_ENDIAN
Specifies that raw data on disk is stored as little-endian data (least
significant byte first).  Specifying this flag along with the contradictory
.BR GD_BIG_ENDIAN 
will cause the library to assume that the endianness of the data is opposite to
that of the native architecture.

This flag is ignored completely if an
.B ENDIAN
directive occurs in the fragment, unless
.B GD_FORCE_ENDIAN
is also specified.
.TP
.B GD_PEDANTIC
Specifies that unrecognised lines found during the parsing of the fragment
should always cause a fatal error.  Without this flag, if a
.B VERSION
directive (see
.BR dirfile-format (5))
indicates that the dirfile being opened conforms Standards Version newer than
the version understood by the library, unrecognised lines will be silently
ignored.
.TP
.B GD_TRUNC
If
.I include_file
already exists , it will be truncated before opening.  If the file does not
exist, this flag is ignored.

.P
The
.I flags
parameter may also be bitwise or'd with one of the following symbols indicating
the default encoding scheme of the dirfile.  Like the endianness flags, the
choice of encoding here is ignored if the encoding is specified in the dirfile
itself, unless
.B GD_FORCE_ENCODED
is also specified.  If none of these symbols is present,
.B GD_AUTO_ENCODED
is assumed, unless the
.BR dirfile_include ()
call results in creation or truncation of the dirfile.  In that case,
.B GD_UNENCODED
is assumed.  See
.BR dirfile-encoding (5)
for details on dirfile encoding schemes.
.TP
.B GD_AUTO_ENCODED
Specifies that the encoding type is not known in advance, but should be detected
by the GetData library.  Detection is accomplished by searching for raw data
files with extensions appropriate to the encoding scheme.  This method will
notably fail if the the library is called via
.BR putdata (3)
to create a previously non-existent raw field unless a read is first
successfully performed on the dirfile.  Once the library has determined the
encoding scheme for the first time, it remembers it for subsequent calls.
.TP
.B GD_SLIM_ENCODED
Specifies that raw data files are compressed using the slimlib library.
.TP
.B GD_TEXT_ENCODED
Specifies that raw data files are encoded as text files containing one data
sample per line.  
.TP
.B GD_UNENCODED
Specifies that raw data files are not encoded, but written verbatim to disk.

.SH RETURN VALUE
On success,
.BR dirfile_include ()
returns the format file index of the newly added fragment.  On error, -1 is
returned and the dirfile error is set to a non-zero error value.  Possible error
values are:
.TP 8
.B GD_E_ACCMODE
The supplied dirfile was opened in read-only mode, but
.B GD_CREAT
or
.B GD_TRUNC
was specified in
.IR flags .
.TP
.B GD_E_ALLOC
The library was unable to allocate memory.
.TP
.B GD_E_BAD_INDEX
The supplied fragment index was out of range.
.TP
.B GD_E_FORMAT
A syntax error occurred in the fragment.
.TP
.B GD_E_INTERNAL_ERROR
An internal error occurred in the library while trying to perform the task.
This indicates a bug in the library.  Please report the incident to the
maintainer.
.TP
.B GD_E_OPEN_INCLUDE
The fragment could not be opened or created.
.P
The dirfile error may be retrieved by calling
.BR get_error (3).
A descriptive error string for the last error encountered can be obtained from
a call to
.BR get_error_string (3).
When finished with it, the DIRFILE object may be deallocated with a call to
.BR dirfile_close (3),
even if the open failed.
.SH SEE ALSO
.BR dirfile (5),
.BR dirfile-encoding (5),
.BR dirfile-format (5),
.BR dirfile_open (3),
.BR get_error (3),
.BR get_error_string (3),
.BR get_fragmentname (3),
.BR get_nfragments (3)
