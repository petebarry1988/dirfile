.\" get_nfields_by_type.3.  The get_nfields_by_type man page.
.\"
.\" (C) 2008 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" GetData is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License along
.\" with GetData; if not, write to the Free Software Foundation, Inc.,
.\" 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
.\"
.TH get_nfields_by_type 3 "7 October 2008" "Version 0.4.0" "GETDATA"
.SH NAME
get_nfields_by_type \(em report the number of fields of a given type in a dirfile
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "unsigned int get_nfields_by_type(DIRFILE *" dirfile ", gd_entype_t type );
.hy
.ad n
.SH DESCRIPTION
The
.BR get_nfields_by_type ()
function queries a dirfile(5) database specified by
.I dirfile
and returns the number of fields defined in the database.  Notably, this count
does not include the implicit
.I INDEX
field, nor /META fields.

The 
.I dirfile
parameter must point to a valid DIRFILE object previously created by a call to
.BR dirfile_open (3).
The
.I type
parameter should be one of the following symbols indicating the type of field to
count:
.IP
.nh
.ad l
.BR GD_RAW_ENTRY ,\~ GD_LINCOM_ENTRY ,\~ GD_LINTERP_ENTRY ,\~
.BR GD_BIT_ENTRY ,\~ GD_MULTIPLY_ENTRY ,\~ GD_PHASE_ENTRY ,\~
.BR GD_CONST_ENTRY ,\~ GD_STRING_ENTRY
.ad n
.hy

.SH RETURN VALUE
Upon successful completion,
.BR get_nfields_by_type ()
returns the number of defined fields in the dirfile.  On error, it
returns zero and sets the dirfile error
to a non-zero error value.  Possible error values are:
.TP 8
.B GD_E_BAD_DIRFILE
The supplied dirfile was invalid.
.P
The dirfile error may be retrieved by calling
.BR get_error (3).
A descriptive error string for the last error encountered can be obtained from
a call to
.BR get_error_string (3).
.SH SEE ALSO
.BR dirfile (5),
.BR dirfile_open (3),
.BR getdata (3),
.BR get_error (3),
.BR get_error_string (3),
.BR get_nfields (3)
