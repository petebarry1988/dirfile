.\" gd_get_constant.3.  The gd_get_constant man page.
.\"
.\" (C) 2008, 2010 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.2 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
.\" Texts.  A copy of the license is included in the `COPYING.DOC' file
.\" as part of this distribution.
.\"
.TH gd_get_constant 3 "3 Novmeber 2010" "Version 0.7.0" "GETDATA"
.SH NAME
gd_get_constant \(em retrieve a scalar constant from a dirfile database
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "int gd_get_constant(DIRFILE *" dirfile ", const char *" field_code ,
.BI "gd_type_t " return_type ", void *" data_out );
.hy
.ad n
.SH DESCRIPTION
The
.BR gd_get_constant ()
function queries a dirfile(5) database specified by
.I dirfile
for the
.B CONST
scalar
.IR field_code ,
which may contain a representation suffix.
The constant is converted to the data type specified by
.IR return_type ,
and stored in the user-supplied buffer
.IR data_out .

The 
.I dirfile
argument must point to a valid DIRFILE object previously created by a call to
.BR gd_open (3).
The argument
.I data_out
must point to a valid memory location of sufficient size to hold a value of the
return type specified.

The 
.I return_type
argument should be one of the following symbols, which indicates the desired
return type of the data:
.RS
.TP 11
.I GD_UINT8
unsigned 8-bit integer
.TP
.I GD_INT8
signed (two's complement) 8-bit integer
.TP
.I GD_UINT16
unsigned 16-bit integer
.TP
.I GD_INT16
signed (two's complement) 16-bit integer
.TP
.I GD_UINT32
unsigned 32-bit integer
.TP
.I GD_INT32
signed (two's complement) 32-bit integer
.TP
.I GD_UINT64
unsigned 64-bit integer
.TP
.I GD_INT64
signed (two's complement) 64-bit integer
.TP
.IR GD_FLOAT32
IEEE-754 standard 32-bit single precision floating point number
.TP
.IR GD_FLOAT64
IEEE-754 standard 64-bit double precision floating point number
.TP
.IR GD_COMPLEX64
C99-conformant 64-bit single precision complex number
.TP
.IR GD_COMPLEX128
C99-conformant 128-bit double precision complex number
.TP
.I GD_NULL
the null type: the database is queried as usual, but no data is returned.
In this case,
.I data_out
is ignored and may be NULL.
.RE

The return type of the constant need not be the same as the type of the data
stored in the database.  Type conversion will be performed as necessary to
return the requested type.  If the
.I field_code
does not indicate a representation, but conversion from a complex value to a
purely real one is required, only the real portion of the requested vector will
be returned.
.SH RETURN VALUE
On success,
.BR gd_get_constant ()
returns zero.  On error, it returns -1 and sets the dirfile error to a non-zero
value.  Possible error values are:
.TP 8
.B GD_E_BAD_CODE
The field specified by
.I field_code
was not found in the database.
.TP
.B GD_E_BAD_DIRFILE
An invalid
.I dirfile
was supplied.
.TP
.B GD_E_BAD_FIELD_TYPE
The supplied
.I field_code
referred to a field of a type other than 
.BR CONST .
The caller should use
.BR gd_getdata (3),
or
.BR gd_get_string (3)
instead.
.TP
.B GD_E_BAD_REPR
The representation suffix specified in
.IR field code ,
or in one of the field codes it uses for input, was invalid.
.TP
.B GD_E_BAD_TYPE
An invalid
.I return_type
was specified.
.TP
.B GD_E_INTERNAL_ERROR
An internal error occurred in the library while trying to perform the task.
This indicates a bug in the library.  Please report the incident to the
maintainer.
.P
The dirfile error may be retrieved by calling
.BR gd_error (3).
A descriptive error string for the last error encountered may be obtained from
a call to
.BR gd_error_string (3).
.SH SEE ALSO
.BR dirfile (5),
.BR gd_open (3),
.BR gd_error (3),
.BR gd_error_string (3),
.BR gd_get_carray (3),
.BR gd_constants (3),
.BR gd_put_constant (3)
