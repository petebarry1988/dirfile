.\" dirfile-encoding.5.  The dirfile-encoding man page.
.\"
.\" (C) 2008 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" GetData is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License along
.\" with GetData; if not, write to the Free Software Foundation, Inc.,
.\" 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
.\"
.TH dirfile-encoding 5 "2 October 2008" "Standards Version 6" "DATA FORMATS"
.SH NAME
dirfile-encoding \(em dirfile database encoding schemes
.SH DESCRIPTION
The
.I Dirfile Standards
indicate that
.B RAW
fields defined in the database are accompanied by binary files containing the
field data in the specified simple data type.  In certain situations, it may be
advantageous to convert the binary files in the database into a more convenient
form.  This is accomplished by
.I encoding
the dirfile into the alternate form.  A common use-case for encoding a dirfile
is to compress the binary files to save disk space.  Only data is modified by an
encoding scheme.  Database metadata is unaffected.

Support for encoding schemes is optional.  An implementation need not support
any particular encoding scheme, or may only support certain operations with it,
but should expect to encounter unknown encoding schemes and fail gracefully in
such situations.

Additionally, how a particular encoding is implemented is not specified by the
Dirfile Standards, but, for purposes of interoperability, all dirfile
implementations are encouraged to support the encoding implementation used by
the GetData dirfile reference implmentation.


The rest of this manual page discusses specifics of the encoding framework
implemented in the GetData library.

.SH THE GETDATA ENCODING FRAMEWORK

The GetData library provides an encoding framework which abstracts data file
I/O, allowing for generic support for a wide variety of encoding schemes.
The only functions which make use of the encoding framework are
.BR getdata "(3), " get_nframes (3),
and
.BR putdata (3).

Most of the encodings supported by GetData are implemented through external
libraries which handle the actual file I/O and data translation.  All such
libraries are optional: a build of the library which omits an external library
will lack support for the associated encoding scheme.  In this case, GetData
will still properly identify the encoding scheme, but attempts to use GetData
for file I/O via the encoding will fail with the
.B GD_E_UNSUPPORTED
error code.

GetData discovers the encoding scheme of a particular dirfile by noting the
filename extension of files associated with
.B RAW
fields.  Binary files which form an unencoded dirfile have no file extension.
The file extension used by the other encodings are noted below.  Encoding
discovery proceeds by searching for files with the known list of file extensions
(in some unspecified order) and stopping when the first successful match is
made.

Because of this, when the dirfile has multiple data files with different,
supported file extensions which could legitamilty be associated with a
.B RAW
field, the encoding scheme discovered by GetData is not well defined.  To
prevent misidentification of the encoding scheme, a dirfile directory should
only ever contain data files in one particular encoding (including no
encoding).

In addition to raw (unencoded) data, GetData supports two other encoding
schemes:
.I text
encoding, and
.I slim
encoding, both discussed below.

.SS Text Encoding

The Text Encoding is unique among GetData encoding schemes in that it requires
no exteral library.  As a result, all builds of the library contain full support
for this encoding.  It is meant to serve as a reference encoding and example
of the encoding framework for work on other encoding schemes.

The Text Encoding replaces the binary data files with 7-bit ASCII files
containing a decimal text encoding of the data, one sample per line.  All
operations are supported by the Text Excoding.  The file extension of the
Text Encoding is
.BR .txt .

.SS Slim Encoding

The Slim Encoding compresses raw binary files using the slimlib compression
library.  The slimlib library was developed at Princeton University to compress
dirfile-like data.  It permits reasonably fast random-access reads.  The slimlib
library currently lacks write capabilities; as a result, the Slim Encoding does
not support
.BR putdata (3).

Slimlib has been released under the GPL, but as of the writing of this manual
page, slimlib is not distributed via the Internet.  Slimlib was written by
Joseph Fowler.  Interested parties should write to the slimlib author directly.

.SH AUTHOR

This manual page was by D. V. Wiebe
.nh
<dvw@ketiltrout.net>.
.hy 1

.SH SEE ALSO
.BR dirfile (5),
.BR dirfile\-format (5)
