.\" get_constant.3.  The get_constant man page.
.\"
.\" (C) 2008 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" GetData is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License along
.\" with GetData; if not, write to the Free Software Foundation, Inc.,
.\" 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
.\"
.TH get_constant 3 "6 October 2008" "Version 0.4.0" "GETDATA"
.SH NAME
get_constant \(em retrieve a scalar constant from a dirfile database
.SH SYNOPSIS
.B #include <get_constant.h>
.HP
.nh
.ad l
.BI "int get_constant(DIRFILE *" dirfile ", const char *" field_code ,
.BI "gd_type_t " return_type ", void *" data_out );
.hy
.ad n
.SH DESCRIPTION
The
.BR get_constant ()
function queries a dirfile(5) database specified by
.I dirfile
for the constant scalar
.IR field_code .
The constant is converted to the data type specified by
.IR return_type ,
and stored in the user-supplied buffer
.IR data_out .

The 
.I dirfile
parameter must point to a valid DIRFILE object previously created by a call to
.BR dirfile_open (3).

The 
.I return_type
parameter should be one of the following symbols, which indicates the desired
return type of the data:
.RS
.TP 11
.I GD_UINT8
unsigned 8-bit integer
.TP
.I GD_INT8
signed 8-bit integer
.TP
.I GD_UINT16
unsigned 16-bit integer
.TP
.I GD_INT16
signed 16-bit integer
.TP
.I GD_UINT32
unsigned 32-bit integer
.TP
.I GD_INT32
signed 32-bit integer
.TP
.I GD_UINT64
unsigned 64-bit integer
.TP
.I GD_INT64
signed 64-bit integer
.TP
.IR GD_FLOAT32 \~or\~ GD_FLOAT
IEEE-754 standard 32-bit single precision floating point number
.TP
.IR GD_FLOAT64 \~or\~ GD_DOUBLE
IEEE-754 standard 64-bit double precision floating point number
.TP
.I GD_NULL
the null type: the database is queried as usual, but no data is returned.
In this case,
.I data_out
is ignored and may be NULL.
.RE

The return type of the constant need not be the same as the type of the data
stored in the database.  Type conversion will be performed as necessary to
return the requested type.  The parameter
.I data_out
must point to a valid memory location of sufficient size to hold a value of the
return type specified.
.SH RETURN VALUE
On success,
.BR get_constant ()
returns zero.  On error, it returns -1 and sets the dirfile error to a non-zero
value.  Possible error values are:
.TP 8
.B GD_E_BAD_CODE
The field specified by
.I field_code
was not found in the database.
.TP
.B GD_E_BAD_DIRFILE
An invalid
.I dirfile
was supplied.
.TP
.B GD_E_BAD_FIELD_TYPE
The supplied
.I field_code
referred to a 
.B CONST
or 
.B STRING
field.  The caller should use
.BR get_constant (3),
or
.BR get_string (3)
instead.
.TP
.B GD_E_BAD_TYPE
An invalid
.I return_type
was specified.
.TP
.B GD_E_INTERNAL_ERROR
An internal error occurred in the library while trying to perform the task.
This indicates a bug in the library.  Please report the incident to the
maintainer.
.P
The dirfile error may be retrieved by calling
.BR get_error (3).
A descriptive error string for the last error encountered may be obtained from
a call to
.BR get_error_string (3).
.SH SEE ALSO
.BR dirfile (5),
.BR dirfile-encoding (5),
.BR dirfile_open (3),
.BR getdata (3),
.BR get_error (3),
.BR get_error_string (3),
.BR get_nframes (3),
.BR get_spf (3),
.BR get_string (3),
.BR putdata (3)
