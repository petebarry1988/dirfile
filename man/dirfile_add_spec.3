.\" dirfile_add_spec.3.  The dirfile_add_spec man page.
.\"
.\" (C) 2008 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" GetData is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License along
.\" with GetData; if not, write to the Free Software Foundation, Inc.,
.\" 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
.\"
.TH dirfile_add_spec 3 "16 October 2008" "Version 0.4.0" "GETDATA"
.SH NAME
dirfile_add_spec, dirfile_add_metaspec \(em add a field to a dirfile
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "int dirfile_add_spec(DIRFILE *" dirfile ", const char *" line ,
.BI "int " format_file );
.HP
.BI "int dirfile_add_metaspec(DIRFILE *" dirfile ", const char *" line ,
.BI "const char *" parent );
.hy
.ad n
.SH DESCRIPTION
The
.BR dirfile_add_spec ()
function adds the field described by the field specification line in
.I line
to the dirfile specified by
.IR dirfile .
The
.BR dirfile_add_metaspec ()
function behaves similarly, but adds the field as a metafield under the
field indicated by the field code
.IR parent .
Field specification lines are described in detail in
.BR dirfile-format (5).

When adding a metafield, 
.I line
should only contain a field specification, and not a
.B /META
directive.

Passing these functions a directive line instead of a field specification line
will result in a syntax error.

.SH RETURN VALUE
On success,
.BR dirfile_add_spec ()
and
.BR dirfile_add_metaspec ()
return zero.   On error, -1 is returned and the dirfile error is set to a
non-zero error value.  Possible error values are:
.TP 8
.B GD_E_ACCMODE
The specified dirfile was opened read-only.
.TP
.B GD_E_ALLOC
The library was unable to allocate memory.
.TP
.B GD_E_BAD_CODE
The
.I parent
field code was not found, or was already a metafield.
.TP
.B GD_E_BAD_DIRFILE
The supplied dirfile was invalid.
.TP
.B GD_E_BAD_INDEX
The
.IR format_file
parameter was out of range.
.TP
.B GD_E_FORMAT
A syntax error was encountered in
.IR line .
.TP
.B GD_E_RAW_IO
An I/O error occurred while creating an empty binary file to be associated with
a newly added
.B RAW
field.
.TP
.B GD_E_UNKNOWN_ENCODING
The encoding scheme of the specified format file fragment is not known to the
library.  As a result, the library was unable to create an empty binary file to
be associated with a newly added
.B RAW
field.
.TP
.B GD_E_UNSUPPORTED
The encoding scheme of the specified format file fragment does not support
creating an empty binary file to be associated with a newly added
.B RAW
field.
.P
The dirfile error may be retrieved by calling
.BR get_error (3).
A descriptive error string for the last error encountered can be obtained from
a call to
.BR get_error_string (3).
.SH SEE ALSO
.BR dirfile_add (3),
.BR dirfile_add_bit (3),
.BR dirfile_add_lincom (3),
.BR dirfile_add_linterp (3),
.BR dirfile_add_meta (3),
.BR dirfile_add_metabit (3),
.BR dirfile_add_metalincom (3),
.BR dirfile_add_metalinterp (3),
.BR dirfile_add_metamultiply (3),
.BR dirfile_add_metaphase (3),
.BR dirfile_add_multiply (3),
.BR dirfile_add_phase (3),
.BR dirfile_add_raw (3),
.BR dirfile_open (3),
.BR durfile_flush_metadata (3),
.BR get_error (3),
.BR get_error_string (3),
.BR dirfile-format (5)
