.\" gd_constants.3.  The gd_constants man page.
.\"
.\" (C) 2010 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.2 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
.\" Texts.  A copy of the license is included in the `COPYING.DOC' file
.\" as part of this distribution.
.\"
.TH gd_mcarrays 3 "3 November 2010" "Version 0.7.0" "GETDATA"
.SH NAME
gd_constants \(em retrieve a list of CARRAY values from a dirfile
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "const gd_carray_t *gd_mcarrays(DIRFILE *" dirfile ", const char"
.BI * parent ", gd_type_t " return_type );
.hy
.ad n
.SH DESCRIPTION
The
.BR gd_mcarrays ()
function queries a dirfile(5) database specified by
.I dirfile
and returns a read-only list of values of the all
.B CARRAY
metafields for the supplied
.I parent
field, after type conversion to the data type specified by
.IR return_type .
For a list of valid symbols to use for
.IR return_type ,
see the
.BR gd_get_carray (3)
man page.

The 
.I dirfile
argument must point to a valid DIRFILE object previously created by a call to
.BR gd_open (3).

The array returned will be de-allocated by a call to
.BR gd_close (3)
and should not be de-allocated by the caller.  The list returned should not be
assumed to be in any particular order, except that it is guaranteed to be in the
same order as the list of
.B CARRAY
fields returned by
.BR gd_mfield_list_by_type (3).
The number of values in the array can be obtained from a call to
.BR gd_nmfields_by_type (3).

The caller may not modify any values in the array, nor the array itself.  Doing
so may cause database corruption.  The pointer returned is guaranteed to be
valid only until
.BR gd_mcarrays ()
is called again, or until the dirfile's metadata is modified (by adding,
modifying or deleting an entry), or until the array is de-allocated by a call to
.BR gd_close (3).

A corresponding list of names for these fields may be obtained by calling
.BR gd_field_list_by_type (3).

.SH RETURN VALUE
Upon successful completion,
.BR gd_mcarrays ()
returns a pointer to an array of
.B gd_carray_t
objects containing the values of all the CARRAYs defined in the dirfile
database.  The
.B gd_carray_t
is defined as:
.PP
.in +4n
.nf
.fam C
typedef struct {
  size_t       n;              /* array_len */
  void        *d;              /* CARRAY data */
} gd_carray_t;
.fam
.fi
.in
.P
where
.I n
specifies the length of the
.B CARRAY
data, and
.I d
is an array of the data values themselves.  The caller should cast the
.B void
pointer to a type appropriate for the
.I return_type
specified.  The list is terminated by an end-of-list marker consisting of a
.B gd_carray_t
item with
.I n
set to zero.

If no CARRAYs are defined in the database, a list containing only the
end-of-list marker is returned.  On error,
.BR gd_mcarrays ()
returns NULL and sets the dirfile error to a non-zero error value.  Possible
error values are:
.TP 8
.B GD_E_ALLOC
The library was unable to allocate memory.
.TP
.B GD_E_BAD_CODE
The supplied parent field code was not found, or referred to a metafield itself.
.TP
.B GD_E_BAD_DIRFILE
The supplied dirfile was invalid.
.TP
.B GD_E_BAD_TYPE
The
.I return_type
specified was invalid.
.P
The dirfile error may be retrieved by calling
.BR gd_error (3).
A descriptive error string for the last error encountered can be obtained from
a call to
.BR gd_error_string (3).
.SH SEE ALSO
.BR dirfile (5),
.BR gd_carrays (3),
.BR gd_error (3),
.BR gd_error_string (3),
.BR gd_get_carray (3),
.BR gd_mfield_list_by_type (3),
.BR gd_nmfields_by_type (3),
.BR gd_open (3)
