.\" gd_endianness.3.  The gd_endianness man page.
.\"
.\" (C) 2008, 2010 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.2 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
.\" Texts.  A copy of the license is included in the `COPYING.DOC' file
.\" as part of this distribution.
.\"
.TH gd_endianness 3 "17 July 2010" "Version 0.7.0" "GETDATA"
.SH NAME
gd_endianness \(em report the byte sex of fields in a dirfile
.SH SYNOPSIS
.B #include <getdata.h>
.HP
.nh
.ad l
.BI "unsigned long gd_endianness(DIRFILE *" dirfile ", int " fragment_index );
.hy
.ad n
.SH DESCRIPTION
The
.BR gd_endianness ()
function queries a dirfile(5) database specified by
.I dirfile
and returns the byte sex for the fragment indexed by
.IR fragment_index .
The byte sex of a fragment indicate the endianness of data stored in binary
files associated with
.B RAW
fields defined in the specified fragment.  The endianness of a fragment
containing no
.B RAW
fields is not meaningful.

The
.I dirfile
argument must point to a valid DIRFILE object previously created by a call to
.BR gd_open (3).

.SH RETURN VALUE
Upon successful completion,
.BR gd_endianness ()
returns the byte sex of the specified fragment, which will be either
.BR GD_BIG_ENDIAN " or " GD_LITTLE_ENDIAN ,
bitwise-or'd with either
.B GD_ARM_ENDIAN 
or 
.BR GD_NOT_ARM_ENDIAN ,
indicating whether double-precision floating point data in this fragment are
stored in the old ARM middle-endian format.  On error, it returns zero and
sets the dirfile error to a non-zero error value.  Possible error values are:
.TP 8
.B GD_E_BAD_DIRFILE
The supplied dirfile was invalid.
.TP
.B GD_E_BAD_INDEX
The supplied index was out of range.
.P
The dirfile error may be retrieved by calling
.BR gd_error (3).
A descriptive error string for the last error encountered can be obtained from
a call to
.BR gd_error_string (3).
.SH SEE ALSO
.BR gd_alter_endianness (3),
.BR gd_getdata (3),
.BR gd_error (3),
.BR gd_error_string (3),
.BR gd_open (3),
.BR dirfile (5),
.BR dirfile-format (5)
